select 和epoll比较
相比于select,epoll最大大的好处在于它不会随着监听fd数⺫目目的增⻓长而而降低效率。
------------------------------------------------------------------
select()

client[] ---------->cnd

lfd

1000个表示我们已经建立好连接请求的cfd

1000个客户端有读事件请求

for(i=0; i<maxi; i++){
	if(FD_ISSET(client[i],&rset))

}

---------------------------------------------------------------

    (server)    ---------(epoll) --------------------(client)
   lfd
   cfd1
   cfd2
   
   						     	[epd]
   					[lfd]   			     [cfd1] 
   					 	[ ev0 ]				     [   ev1  ]
   			[cfd2]                                  [cfd3]
   			       [  ev2 ]                                    [  ev3 ]                      	
  
  
  int epfd = epoll_create(1024); 
  第一个参数是epoll_create(epfd,op,)的返回值,
  第二个参数表示示动作,用用三个宏来表示示:
						EPOLL_CTL_ADD:注册新的fd到epfd中;  
						EPOLL_CTL_MOD:修改已经注册的fd的监听事件;
 						EPOLL_CTL_DEL:从epfd中删除一一个fd;
 第三个参数是需要监听的fd,
 struct 	 epoll_event结构如下:
			typedef union epoll_data {
					void *ptr;
					int fd;
					__uint32_t u32;
					__uint64_t u64;
			} epoll_data_t;			
   						
  			 struct epoll_event {
					__uint32_t events; /* Epoll events */
					epoll_data_t data; /* User data variable */
			};
  第四个参数是告诉内核需要监听什么事,
  
  
  [(1)]  [(2)]  [(3)]  [(4)]  [(5)]
                                            nready  []  []   []
   
   
    


















