!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
FLAG	makefile	/^FLAG=-lm$/;"	m
OBJ	makefile	/^OBJ=$(patsubst %.c,%.o,$(SRC))$/;"	m
SRC	makefile	/^SRC=$(wildcard *.c)$/;"	m
cJSON	cJSON.h	/^typedef struct cJSON {$/;"	s
cJSON	cJSON.h	/^} cJSON;$/;"	t	typeref:struct:cJSON
cJSON_AddBoolToObject	cJSON.h	77;"	d
cJSON_AddFalseToObject	cJSON.h	76;"	d
cJSON_AddItemReferenceToArray	cJSON.c	/^void cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)					$/;"	f
cJSON_AddItemReferenceToObject	cJSON.c	/^void cJSON_AddItemReferenceToObject(cJSON *object,const char *string,cJSON *item)$/;"	f
cJSON_AddItemToArray	cJSON.c	/^void   cJSON_AddItemToArray(cJSON *array, cJSON *item)$/;"	f
cJSON_AddItemToObject	cJSON.c	/^void  cJSON_AddItemToObject(cJSON *object,const char *string,cJSON *item)$/;"	f
cJSON_AddNullToObject	cJSON.h	74;"	d
cJSON_AddNumberToObject	cJSON.h	78;"	d
cJSON_AddStringToObject	cJSON.h	80;"	d
cJSON_AddTrueToObject	cJSON.h	75;"	d
cJSON_Array	cJSON.h	13;"	d
cJSON_CreateArray	cJSON.c	/^cJSON *cJSON_CreateArray(void)$/;"	f
cJSON_CreateBool	cJSON.c	/^cJSON *cJSON_CreateBool(int b)$/;"	f
cJSON_CreateDoubleArray	cJSON.c	/^cJSON *cJSON_CreateDoubleArray(double *numbers,int count)$/;"	f
cJSON_CreateFalse	cJSON.c	/^cJSON *cJSON_CreateFalse(void)$/;"	f
cJSON_CreateFloatArray	cJSON.c	/^cJSON *cJSON_CreateFloatArray(float *numbers,int count)$/;"	f
cJSON_CreateIntArray	cJSON.c	/^cJSON *cJSON_CreateIntArray(int *numbers,int count)$/;"	f
cJSON_CreateNull	cJSON.c	/^cJSON *cJSON_CreateNull(void)$/;"	f
cJSON_CreateNumber	cJSON.c	/^cJSON *cJSON_CreateNumber(double num)$/;"	f
cJSON_CreateObject	cJSON.c	/^cJSON *cJSON_CreateObject(void)$/;"	f
cJSON_CreateString	cJSON.c	/^cJSON *cJSON_CreateString(const char *string)$/;"	f
cJSON_CreateStringArray	cJSON.c	/^cJSON *cJSON_CreateStringArray(const char **strings,int count)$/;"	f
cJSON_CreateTrue	cJSON.c	/^cJSON *cJSON_CreateTrue(void)$/;"	f
cJSON_Delete	cJSON.c	/^void cJSON_Delete(cJSON *c)$/;"	f
cJSON_DeleteItemFromArray	cJSON.c	/^void cJSON_DeleteItemFromArray(cJSON *array,int which)$/;"	f
cJSON_DeleteItemFromObject	cJSON.c	/^void  cJSON_DeleteItemFromObject(cJSON *object,const char *string)$/;"	f
cJSON_DetachItemFromArray	cJSON.c	/^cJSON *cJSON_DetachItemFromArray(cJSON *array,int which)$/;"	f
cJSON_DetachItemFromObject	cJSON.c	/^cJSON *cJSON_DetachItemFromObject(cJSON *object,const char *string)$/;"	f
cJSON_Duplicate	cJSON.c	/^cJSON *cJSON_Duplicate(cJSON *item,int recurse)$/;"	f
cJSON_False	cJSON.h	8;"	d
cJSON_GetArrayItem	cJSON.c	/^cJSON *cJSON_GetArrayItem(cJSON *array,int item)$/;"	f
cJSON_GetArraySize	cJSON.c	/^int    cJSON_GetArraySize(cJSON *array)$/;"	f
cJSON_GetErrorPtr	cJSON.c	/^const char *cJSON_GetErrorPtr(void)$/;"	f
cJSON_GetObjectItem	cJSON.c	/^cJSON *cJSON_GetObjectItem(cJSON *object,const char *string)$/;"	f
cJSON_Hooks	cJSON.h	/^typedef struct cJSON_Hooks {$/;"	s
cJSON_Hooks	cJSON.h	/^} cJSON_Hooks;$/;"	t	typeref:struct:cJSON_Hooks
cJSON_InitHooks	cJSON.c	/^void cJSON_InitHooks(cJSON_Hooks* hooks)$/;"	f
cJSON_IsReference	cJSON.h	16;"	d
cJSON_NULL	cJSON.h	10;"	d
cJSON_New_Item	cJSON.c	/^static cJSON *cJSON_New_Item(void)$/;"	f	file:
cJSON_Number	cJSON.h	11;"	d
cJSON_Object	cJSON.h	14;"	d
cJSON_Parse	cJSON.c	/^cJSON *cJSON_Parse(const char *value)$/;"	f
cJSON_ParseWithOpts	cJSON.c	/^cJSON *cJSON_ParseWithOpts(const char *value,const char **return_parse_end,int require_null_terminated)$/;"	f
cJSON_Print	cJSON.c	/^char *cJSON_Print(cJSON *item)$/;"	f
cJSON_PrintUnformatted	cJSON.c	/^char *cJSON_PrintUnformatted(cJSON *item)$/;"	f
cJSON_ReplaceItemInArray	cJSON.c	/^void  cJSON_ReplaceItemInArray(cJSON *array,int which,cJSON *newitem)		$/;"	f
cJSON_ReplaceItemInObject	cJSON.c	/^void  cJSON_ReplaceItemInObject(cJSON *object,const char *string,cJSON *newitem)$/;"	f
cJSON_SetIntValue	cJSON.h	83;"	d
cJSON_String	cJSON.h	12;"	d
cJSON_True	cJSON.h	9;"	d
cJSON__h	cJSON.h	2;"	d
cJSON_free	cJSON.c	/^static void (*cJSON_free)(void *ptr) = free;$/;"	v	file:
cJSON_malloc	cJSON.c	/^static void *(*cJSON_malloc)(size_t sz) = malloc;$/;"	v	file:
cJSON_strcasecmp	cJSON.c	/^static int cJSON_strcasecmp(const char *s1,const char *s2)$/;"	f	file:
cJSON_strdup	cJSON.c	/^static char* cJSON_strdup(const char* str)$/;"	f	file:
child	cJSON.h	/^	struct cJSON *child;\/\/存数组或者对象$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
create_reference	cJSON.c	/^static cJSON *create_reference(cJSON *item)$/;"	f	file:
ep	cJSON.c	/^static const char *ep;$/;"	v	file:
firstByteMark	cJSON.c	/^static const unsigned char firstByteMark[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };$/;"	v	file:
free_fn	cJSON.h	/^      void (*free_fn)(void *ptr);$/;"	m	struct:cJSON_Hooks
main	1.生成json.c	/^int main()$/;"	f
main	2.生成json数组.c	/^int main()$/;"	f
main	3.解析json.c	/^int main()$/;"	f
main	4.生成对象.c	/^int main()$/;"	f
main	5.删除.c	/^int main()$/;"	f
main	5.对象解析.c	/^int main()$/;"	f
main	6.练习.c	/^int main()$/;"	f
main	7.练习.c	/^int main()$/;"	f
main	8.解析.c	/^int main()$/;"	f
main	main.c	/^int main()$/;"	f
malloc_fn	cJSON.h	/^      void *(*malloc_fn)(size_t sz);$/;"	m	struct:cJSON_Hooks
next	cJSON.h	/^	struct cJSON *next,*prev;  \/\/$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
parse_array	cJSON.c	/^static const char *parse_array(cJSON *item,const char *value)$/;"	f	file:
parse_number	cJSON.c	/^static const char *parse_number(cJSON *item,const char *num)$/;"	f	file:
parse_object	cJSON.c	/^static const char *parse_object(cJSON *item,const char *value)$/;"	f	file:
parse_string	cJSON.c	/^static const char *parse_string(cJSON *item,const char *str)$/;"	f	file:
parse_value	cJSON.c	/^static const char *parse_value(cJSON *item,const char *value)$/;"	f	file:
prev	cJSON.h	/^	struct cJSON *next,*prev;  \/\/$/;"	m	struct:cJSON	typeref:struct:cJSON::
print_array	3.解析json.c	/^void print_array(cJSON* json1)$/;"	f
print_array	cJSON.c	/^static char *print_array(cJSON *item,int depth,int fmt)$/;"	f	file:
print_number	cJSON.c	/^static char *print_number(cJSON *item)$/;"	f	file:
print_object	cJSON.c	/^static char *print_object(cJSON *item,int depth,int fmt)$/;"	f	file:
print_string	cJSON.c	/^static char *print_string(cJSON *item)$/;"	f	file:
print_string_ptr	cJSON.c	/^static char *print_string_ptr(const char *str)$/;"	f	file:
print_value	cJSON.c	/^static char *print_value(cJSON *item,int depth,int fmt)$/;"	f	file:
skip	cJSON.c	/^static const char *skip(const char *in) $/;"	f	file:
string	cJSON.h	/^	char *string; \/\/对象关键字$/;"	m	struct:cJSON
suffix_object	cJSON.c	/^static void suffix_object(cJSON *prev,cJSON *item)$/;"	f	file:
type	cJSON.h	/^	int type;\/\/类型$/;"	m	struct:cJSON
valuedouble	cJSON.h	/^	double valuedouble;$/;"	m	struct:cJSON
valueint	cJSON.h	/^	int valueint;   \/\/数字$/;"	m	struct:cJSON
valuestring	cJSON.h	/^	char *valuestring; \/\/字符串$/;"	m	struct:cJSON
