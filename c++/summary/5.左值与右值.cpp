#include<iostream>

using namespace std;

/* ~~*~~ 小  结 ~~*~~
 *
 * 左值 与 右值
 * 源于 c 语言术语
 * 左值：指代那些可以用在赋值表达式左侧的确定存储空间的东西( 例如：具名对象、栈和堆上分配的对象、其他对象的成员 )
 * 右值：指的是只能在赋值表达式右侧出现的东西( 例如：字面值、临时对象 )
 *
 * --------------------------------
 *
 * 左值引用 与 右值引用
 * 左值引用：只能绑定到左值，不能绑定到右值的引用
 * 右值引用：只能绑定到右值，不能绑定到左值
 * 
 * 左值引用的表达方式：数据类型 &
 * 右值引用的表达方式：数据类型 &&
 *
 * 左值可以出现在等号两侧，右值只能出现在等号右侧
 *
 *
 */

int main(){
    /*~~ 从定义出发检查定义是否正确 ~~*/
    //int &i = 42;//错误，因为 42 是右值，而 i 是左值引用，所以i不能绑定到 42
    int j = 42;
    int &k = j;//正确，k是左值，所以i可以绑定到 k
    int &&l = 42;//正确，&&表示右值引用，所以i可以绑定到右值42
    int m = 42;
    //int &&n = m;//错误，因为 m 是左值，而 n 是右值引用，所以不能绑定到 m

    /*~~ 顶层 const、底层 const 与 左右引用 ~~*/
    const int &a = 20;
    //错误，右值引用，不可改变值
    //a = 10;
    
    //左值引用, 引用的是个变量，可以改变值
    int b = 20;
    int &c = b;
    c = 10;

    cout<<"a = "<<a<<endl;
    cout<<"c = "<<c<<endl;

    //错误，常亮只能被初始化为右值
    //int &d = 20;
    int &&d = 20;
    d = 35;
    cout<<"d = "<<d<<endl;

    return 0;
}
